import { useState } from 'react';
import { Settings as SettingsIcon, Palette, User, Bell, Shield, Monitor } from 'lucide-react';
import { useTheme } from '../../contexts/ThemeContext';
import { useGameStore } from '../../store/gameStore';
import { useRenderPerformance } from '../../utils/performance';
import { FadeIn } from '../../shared/components/ui/AnimatedComponents';
import { AvatarSelector } from '../../shared/components/ui/AvatarSelector';

const Settings = () => {
  useRenderPerformance('Settings', process.env.NODE_ENV === 'development');
  
  const { currentTheme, setTheme, availableThemes } = useTheme();
  const { user } = useGameStore();
  const [activeSection, setActiveSection] = useState('appearance');
  const [selectedAvatar, setSelectedAvatar] = useState('hunter-1');

  const sections = [
    { id: 'appearance', label: 'Appearance', icon: Palette },
    { id: 'profile', label: 'Profile', icon: User },
    { id: 'notifications', label: 'Notifications', icon: Bell },
    { id: 'privacy', label: 'Privacy', icon: Shield },
    { id: 'advanced', label: 'Advanced', icon: Monitor },
  ];

  return (
    <div className="space-y-6">
      <div>
        <h1 className="text-3xl font-bold mb-2">Settings</h1>
        <p className="text-gray-400">Customize your experience</p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
        {/* Settings Navigation */}
        <FadeIn delay={0}>
          <div className="bg-solo-primary rounded-lg border border-gray-800 p-4">
            <h3 className="font-semibold mb-4">Categories</h3>
            <nav className="space-y-2">
              {sections.map((section) => {
                const Icon = section.icon;
                return (
                  <button
                    key={section.id}
                    onClick={() => setActiveSection(section.id)}
                    className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg text-left transition-colors ${
                      activeSection === section.id
                        ? 'bg-solo-accent/20 text-solo-accent border border-solo-accent/30'
                        : 'text-gray-400 hover:text-solo-text hover:bg-solo-bg'
                    }`}
                  >
                    <Icon className="w-4 h-4" />
                    {section.label}
                  </button>
                );
              })}
            </nav>
          </div>
        </FadeIn>

        {/* Settings Content */}
        <div className="lg:col-span-3">
          {activeSection === 'appearance' && (
            <FadeIn delay={100}>
              <div className="space-y-6">
                {/* Theme Selection */}
                <div className="bg-solo-primary rounded-lg border border-gray-800 p-6">
                  <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
                    <Palette className="w-5 h-5" />
                    Theme Selection
                  </h3>
                  <p className="text-gray-400 text-sm mb-4">
                    Choose your preferred anime/manhwa theme
                  </p>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {availableThemes.map((theme) => (
                      <div
                        key={theme.id}
                        onClick={() => setTheme(theme.id)}
                        className={`p-4 rounded-lg border cursor-pointer transition-all hover:scale-105 ${
                          currentTheme.id === theme.id
                            ? 'border-solo-accent/50 bg-solo-accent/10'
                            : 'border-gray-700 hover:border-gray-600'
                        }`}
                      >
                        {/* Theme Preview */}
                        <div className="flex items-center gap-3 mb-3">
                          <div className="flex gap-1">
                            <div 
                              className="w-4 h-4 rounded-full border"
                              style={{ backgroundColor: `rgb(${theme.colors.accent})` }}
                            />
                            <div 
                              className="w-4 h-4 rounded-full border"
                              style={{ backgroundColor: `rgb(${theme.colors.primary})` }}
                            />
                            <div 
                              className="w-4 h-4 rounded-full border"
                              style={{ backgroundColor: `rgb(${theme.colors.secondary})` }}
                            />
                          </div>
                          {currentTheme.id === theme.id && (
                            <div className="text-solo-accent text-sm font-medium">Active</div>
                          )}
                        </div>
                        
                        <h4 className="font-semibold mb-1">{theme.name}</h4>
                        <p className="text-sm text-gray-400">{theme.description}</p>
                      </div>
                    ))}
                  </div>
                </div>

                {/* Theme Customization */}
                <div className="bg-solo-primary rounded-lg border border-gray-800 p-6">
                  <h3 className="text-lg font-semibold mb-4">Customization</h3>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <div>
                        <p className="font-medium">Animations</p>
                        <p className="text-sm text-gray-400">Enable smooth transitions and effects</p>
                      </div>
                      <label className="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" className="sr-only peer" defaultChecked />
                        <div className="w-11 h-6 bg-gray-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-solo-accent"></div>
                      </label>
                    </div>
                    
                    <div className="flex justify-between items-center">
                      <div>
                        <p className="font-medium">Reduced Motion</p>
                        <p className="text-sm text-gray-400">Minimize animations for better performance</p>
                      </div>
                      <label className="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" className="sr-only peer" />
                        <div className="w-11 h-6 bg-gray-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-solo-accent"></div>
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </FadeIn>
          )}

          {/* Profile Section */}
          {activeSection === 'profile' && (
            <FadeIn delay={100}>
              <div className="space-y-6">
                {/* User Info */}
                <div className="bg-solo-primary rounded-lg border border-gray-800 p-6">
                  <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
                    <User className="w-5 h-5" />
                    Profile Information
                  </h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div className="space-y-4">
                      <div>
                        <label className="block text-sm font-medium mb-2">Username</label>
                        <input
                          type="text"
                          defaultValue={user?.username || 'Shadow Warrior'}
                          className="w-full px-3 py-2 bg-solo-bg border border-gray-700 rounded-lg focus:outline-none focus:border-solo-accent"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium mb-2">Level</label>
                        <div className="px-3 py-2 bg-solo-bg border border-gray-700 rounded-lg text-gray-400">
                          {user?.level || 1} (Read-only)
                        </div>
                      </div>
                    </div>
                    
                    {/* Current Avatar Display */}
                    <div className="flex flex-col items-center">
                      <div className="w-24 h-24 bg-solo-accent/20 rounded-full flex items-center justify-center text-4xl border-2 border-solo-accent/30 mb-3">
                        üó°Ô∏è
                      </div>
                      <p className="text-sm text-gray-400">Current Avatar</p>
                      <p className="text-xs text-gray-500">Shadow Hunter</p>
                    </div>
                  </div>
                </div>

                {/* Avatar Selection */}
                <div className="bg-solo-primary rounded-lg border border-gray-800 p-6">
                  <h3 className="text-lg font-semibold mb-4">Character Avatar</h3>
                  <p className="text-gray-400 text-sm mb-4">
                    Choose your character avatar. Unlock new avatars by leveling up!
                  </p>
                  
                  <AvatarSelector
                    currentTheme={currentTheme.id}
                    userLevel={user?.level || 1}
                    selectedAvatar={selectedAvatar}
                    onAvatarSelect={setSelectedAvatar}
                  />
                </div>
              </div>
            </FadeIn>
          )}

          {/* Other sections placeholder */}
          {!['appearance', 'profile'].includes(activeSection) && (
            <FadeIn delay={100}>
              <div className="bg-solo-primary rounded-lg border border-gray-800 p-6">
                <div className="text-center py-12 text-gray-400">
                  <SettingsIcon className="w-12 h-12 mx-auto mb-3 opacity-50" />
                  <p>{sections.find(s => s.id === activeSection)?.label} settings coming soon!</p>
                </div>
              </div>
            </FadeIn>
          )}
        </div>
      </div>
    </div>
  )
}

export default Settings